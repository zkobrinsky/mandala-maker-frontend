{"version":3,"sources":["components/SandboxSketch.js","components/SketchListItem.js","components/Sketches.js","components/Sketch.js","components/CreateSketch.js","redux/actions/sketchActions.js","components/SketchShow.js","components/MyNav.js","App.js","reportWebVitals.js","redux/reducers/sketchReducer.js","redux/store.js","index.js"],"names":["document","body","style","overflow","symmetry","Math","floor","random","xoff","bgAlpha","bg","setup","p5","canvasParentRef","noCursor","createCanvas","windowWidth","windowHeight","parent","angleMode","DEGREES","colorMode","HSL","background","withinCanvas","mouseX","width","mouseY","height","draw","translate","mx","my","pmx","pmouseX","pmy","pmouseY","hu","map","sin","sat","light","stroke","i","angle","rotate","d","dist","sw","strokeWeight","line","push","scale","pop","frameCount","windowResized","resizeCanvas","SketchListItem","sketch","id","className","to","Col","src","image_thumbnail","alt","title","Sketches","state","value","window","scrollTo","filtered","this","props","sketches","sort","a","b","filter","toLowerCase","includes","length","type","color","Form","onSubmit","event","preventDefault","FormControl","onChange","setState","target","placeholder","Container","Row","React","Component","connect","all","reflections","currentColor","bgColor","clearCanvas","drawRainbow","mouseIsPressed","rainbow","variableLineWidth","lineWidth","CreateSketch","placeHolder","wordChoices","Faker","Hipster","words","join","Space","planet","star","constellation","starCluster","parseInt","handleOnChange","e","key","name","handleReflectionChange","updateReflections","handleColorChange","hsl","updateColor","handleColorChangeComplete","addSketchColor","postData","formData","querySelector","toBlob","form","FormData","append","Object","keys","forEach","createSketch","then","history","handleSubmit","handleRainbowButton","handleClearCanvas","handleVariableLW","console","log","renderOptions","num","N","Array","from","_","index","val","resetSketch","Sketch","onChangeComplete","Label","label","min","max","step","updateLineWidth","colors","innerWidth","triangle","hex","onClick","Button","Group","controlId","Control","as","href","onFocus","dispatch","fetch","method","resp","json","payload","refreshStartColor","refreshStartBgColor","SketchShow","undefined","getSketch","match","params","foundSketch","image_full","find","headers","MyNav","Navbar","variant","Nav","Link","App","getSketches","path","routerProps","SandboxSketch","rotateRate","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","sketchReducer","h","s","l","action","concat","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.55f8eb56.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Sketch from \"react-p5\";\r\n\r\nexport default () => {\r\n  document.body.style.overflow = \"hidden\";\r\n  let symmetry = Math.floor(Math.random() * (12 - 4) + 4);\r\n  let xoff = 0;\r\n  let bgAlpha = 0;\r\n  let bg = [Math.random() * 360 + 1, Math.random(), Math.random()];\r\n\r\n  const setup = (p5, canvasParentRef) => {\r\n    // use parent to render the canvas in this ref\r\n    // (without that p5 will render the canvas outside of your component)\r\n    p5.noCursor();\r\n    p5.createCanvas(p5.windowWidth, p5.windowHeight).parent(canvasParentRef);\r\n    p5.angleMode(p5.DEGREES);\r\n    p5.colorMode(p5.HSL, 360, 1, 1, 1);\r\n    p5.background(0);\r\n\r\n    //declare p5 dependent functions here:\r\n    p5.withinCanvas = () => {\r\n      return p5.mouseX > 0 &&\r\n        p5.mouseX < p5.width &&\r\n        p5.mouseY > 0 &&\r\n        p5.mouseY < p5.height\r\n        ? true\r\n        : false;\r\n    };\r\n  };\r\n\r\n  const draw = (p5) => {\r\n    if (bgAlpha < 0.2) {\r\n      p5.background(0, 0, 0, bgAlpha * -1);\r\n    }\r\n    p5.background(...bg, bgAlpha);\r\n\r\n    p5.translate(p5.width * 0.5, p5.height * 0.5);\r\n\r\n    if (p5.withinCanvas()) {\r\n      let mx = p5.mouseX - p5.width / 2;\r\n      let my = p5.mouseY - p5.height / 2;\r\n      let pmx = p5.pmouseX - p5.width / 2;\r\n      let pmy = p5.pmouseY - p5.height / 2;\r\n\r\n      let hu = p5.map(p5.sin(xoff), -1, 1, 0, 360);\r\n      let sat = p5.map(p5.sin(xoff), -1, 1, 0.6, 1);\r\n      let light = p5.map(p5.sin(xoff), -1, 1, 0.3, 1);\r\n      xoff += 1;\r\n\r\n      p5.stroke(hu, sat, light, 1);\r\n\r\n      for (let i = 0; i < symmetry; i++) {\r\n        let angle = 360 / symmetry;\r\n        p5.rotate(angle);\r\n        let d = p5.dist(mx, my, pmx, pmy);\r\n        // let sw = 8\r\n        let sw = p5.map(d, 0, 20, 20, 3); /* variable strokeweight */\r\n        p5.strokeWeight(sw);\r\n        p5.line(mx, my, pmx, pmy);\r\n        p5.push();\r\n        p5.scale(1, -1);\r\n        p5.line(mx, my, pmx, pmy);\r\n        p5.pop();\r\n      }\r\n    }\r\n    bgAlpha += 0.00005;\r\n    if (p5.frameCount % 30 == 0) {\r\n      // console.log(bgAlpha)\r\n    }\r\n\r\n    if (bgAlpha > 0.02) {\r\n      bgAlpha += 0.02;\r\n    }\r\n    if (bgAlpha > 1) {\r\n      bgAlpha = 0;\r\n    }\r\n  };\r\n\r\n  const windowResized = (p5) => {\r\n    p5.resizeCanvas(p5.windowWidth, p5.windowHeight);\r\n    p5.background(0);\r\n    p5.background(...bg, bgAlpha);\r\n  };\r\n\r\n  return <Sketch setup={setup} draw={draw} windowResized={windowResized} />;\r\n};\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Col } from 'react-bootstrap'\r\n\r\nexport default function SketchListItem ({sketch}) {\r\n\r\n    return (\r\n        <div id={sketch.id} className=\"grid-item\">\r\n            <Link to={`sketches/${sketch.id}`}>\r\n                <Col >\r\n                <img src={sketch.image_thumbnail} alt={sketch.title} className=\"thumbnail\"/>\r\n                </Col>\r\n            </Link>\r\n            <p>{sketch.title}</p>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SketchListItem from \"./SketchListItem.js\";\r\nimport { Form, FormControl, Row, Container } from \"react-bootstrap\";\r\nimport ReactLoading from \"react-loading\";\r\n\r\nclass Sketches extends React.Component {\r\n  state = {\r\n    value: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n  }\r\n\r\n  render() {\r\n    document.body.style.overflow = \"visible\";\r\n    const sorted = this.props.sketches.sort((a, b) => b.id - a.id);\r\n\r\n    let filtered = sorted.filter((sketch) => {\r\n      return sketch.title\r\n        .toLowerCase()\r\n        .includes(this.state.value.toLowerCase());\r\n    });\r\n\r\n    return (\r\n      <div>\r\n        <br></br>\r\n        {this.props.sketches.length === 0 ? (\r\n          <div>\r\n            <br></br>\r\n            <ReactLoading\r\n              className=\"loading\"\r\n              type={\"spinningBubbles\"}\r\n              color={\"#0275d8\"}\r\n              height={\"10%\"}\r\n              width={\"10%\"}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <Form\r\n              className=\"searchbar\"\r\n              onSubmit={(event) => event.preventDefault()}\r\n            >\r\n              <FormControl\r\n                type=\"text\"\r\n                value={this.state.value}\r\n                onChange={(event) =>\r\n                  this.setState({ value: event.target.value })\r\n                }\r\n                placeholder=\"Filter by title\"\r\n                className=\"mr-sm-2\"\r\n              />\r\n              <br></br>\r\n            </Form>\r\n            <Container>\r\n              <Row>\r\n                {filtered.map((sketch) => (\r\n                  <SketchListItem sketch={sketch} />\r\n                ))}\r\n              </Row>\r\n            </Container>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ sketches }) => {\r\n  return { sketches: sketches.all };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Sketches);\r\n","import React from \"react\";\r\nimport Sketch from \"react-p5\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst sketch = (props) => {\r\n  let symmetry = props.sketch.reflections;\r\n  let xoff = 0;\r\n  let color = [\r\n    props.sketch.currentColor[\"h\"],\r\n    props.sketch.currentColor[\"s\"],\r\n    props.sketch.currentColor[\"l\"],\r\n  ];\r\n  let bgColor = [\r\n    props.sketch.bgColor[\"h\"],\r\n    props.sketch.bgColor[\"s\"],\r\n    props.sketch.bgColor[\"l\"],\r\n  ];\r\n\r\n  const setup = (p5, canvasParentRef) => {\r\n    // use parent to render the canvas in this ref\r\n    // (without that p5 will render the canvas outside of your component)\r\n    p5.createCanvas(p5.windowWidth * 0.995, p5.windowHeight * 0.8).parent(\r\n      canvasParentRef\r\n    );\r\n    p5.angleMode(p5.DEGREES);\r\n    p5.colorMode(p5.HSL, 360, 1, 1, 100);\r\n    p5.background(...bgColor, 100);\r\n\r\n    //declare p5 dependent functions here:\r\n    p5.withinCanvas = () => {\r\n      return p5.mouseX > 0 &&\r\n        p5.mouseX < p5.width &&\r\n        p5.mouseY > 0 &&\r\n        p5.mouseY < p5.height\r\n        ? true\r\n        : false;\r\n    };\r\n\r\n    p5.clearCanvas = () => {\r\n      p5.background(...bgColor, 100);\r\n    };\r\n\r\n    p5.drawRainbow = () => {\r\n      xoff += 1;\r\n      let hu = p5.map(p5.sin(xoff), -1, 1, 0, 360);\r\n      let sat = p5.map(p5.sin(xoff), -1, 1, 0.6, 1);\r\n      let light = p5.map(p5.sin(xoff), -1, 1, 0.3, 1);\r\n      return [hu, sat, light, 100];\r\n    };\r\n  };\r\n\r\n  const draw = (p5) => {\r\n    p5.translate(p5.width * 0.5, p5.height * 0.5);\r\n    if (props.state.clearCanvas) {\r\n      p5.clearCanvas();\r\n    }\r\n\r\n    if (p5.mouseIsPressed && p5.withinCanvas()) {\r\n      let mx = p5.mouseX - p5.width / 2;\r\n      let my = p5.mouseY - p5.height / 2;\r\n      let pmx = p5.pmouseX - p5.width / 2;\r\n      let pmy = p5.pmouseY - p5.height / 2;\r\n\r\n      props.state.rainbow\r\n        ? p5.stroke(p5.drawRainbow())\r\n        : p5.stroke(...color, 100);\r\n\r\n      for (let i = 0; i < symmetry; i++) {\r\n        let angle = 360 / symmetry;\r\n        p5.rotate(angle);\r\n        let d = p5.dist(mx, my, pmx, pmy);\r\n        props.state.variableLineWidth\r\n          ? p5.strokeWeight(p5.map(d, 0, 20, 20, 3))\r\n          : p5.strokeWeight(props.sketch.lineWidth);\r\n\r\n        p5.line(mx, my, pmx, pmy);\r\n        p5.push();\r\n        p5.scale(1, -1);\r\n        p5.line(mx, my, pmx, pmy);\r\n        p5.pop();\r\n      }\r\n    }\r\n  };\r\n\r\n  const windowResized = (p5) => {\r\n    p5.resizeCanvas(p5.windowWidth * 0.995, p5.windowHeight * 0.8);\r\n    p5.background(...bgColor, 100);\r\n  };\r\n\r\n  return <Sketch setup={setup} draw={draw} windowResized={windowResized} />;\r\n};\r\n\r\nconst mapStateToProps = ({ sketches }) => {\r\n  return { sketch: sketches.sketch };\r\n};\r\n\r\nexport default connect(mapStateToProps)(sketch);\r\n","import React from \"react\";\r\nimport Sketch from \"./Sketch\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport Faker from \"fakergem\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  createSketch,\r\n  updateColor,\r\n  updateReflections,\r\n  refreshStartColor,\r\n  refreshStartBgColor,\r\n  updateLineWidth,\r\n  addSketchColor,\r\n  resetSketch,\r\n} from \"../redux/actions/sketchActions\";\r\n\r\nimport { SliderPicker, GithubPicker } from \"react-color\";\r\nimport Slider from \"react-rangeslider\";\r\nimport \"react-rangeslider/lib/index.css\";\r\n\r\nclass CreateSketch extends React.Component {\r\n  state = {\r\n    title: \"\",\r\n    rainbow: false,\r\n    placeHolder: \"\",\r\n    variableLineWidth: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    // Might still use to create sketch from existing palette:\r\n    // this.props.refreshStartColor()\r\n    // this.props.refreshStartBgColor()\r\n\r\n    this.props.resetSketch();\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      placeHolder: this.placeHolder(),\r\n    });\r\n  }\r\n\r\n  placeHolder = () => {\r\n    let wordChoices = [\r\n      Faker.Hipster.words(1).join(\" \") +\r\n        \" \" +\r\n        Faker.Space.planet().toLowerCase(),\r\n      Faker.Hipster.words(1).join(\" \") + \" \" + Faker.Space.star().toLowerCase(),\r\n      Faker.Hipster.words(1).join(\" \") +\r\n        \" \" +\r\n        Faker.Space.constellation().toLowerCase(),\r\n      Faker.Hipster.words(1).join(\" \") +\r\n        \" \" +\r\n        Faker.Space.starCluster().toLowerCase(),\r\n    ];\r\n    return wordChoices[parseInt(Math.random() * wordChoices.length)];\r\n  };\r\n\r\n  handleOnChange = (e) => {\r\n    const key = e.target.name;\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      [key]: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleReflectionChange = (e) => {\r\n    this.props.updateReflections(+e.target.value);\r\n  };\r\n\r\n  handleColorChange = ({ hsl }) => {\r\n    this.props.updateColor(hsl);\r\n  };\r\n\r\n  handleColorChangeComplete = (color) => {\r\n    this.props.addSketchColor(color);\r\n  };\r\n\r\n  postData = (formData) => {\r\n    let canvas = document.querySelector(\"#defaultCanvas0\");\r\n    canvas.toBlob((b) => {\r\n      let form = new FormData();\r\n      form.append(\"image\", b);\r\n      Object.keys(formData).forEach((key) => {\r\n        form.append(key, formData[key]);\r\n      });\r\n      this.props\r\n        .createSketch(form)\r\n        .then(() => this.props.history.push(\"/sketches\"));\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // conditional title to state (placeholder vs value)\r\n    if (e.target.querySelector(\"#exampleForm\\\\.ControlInput1\").value !== \"\") {\r\n      this.setState(\r\n        {\r\n          ...this.state,\r\n          title: e.target.querySelector(\"#exampleForm\\\\.ControlInput1\").value,\r\n          reflections: parseInt(\r\n            e.target.querySelector(\"#exampleForm\\\\.ControlSelect1\").value\r\n          ),\r\n        },\r\n        () => this.postData(this.state)\r\n      );\r\n    } else {\r\n      this.setState(\r\n        {\r\n          ...this.state,\r\n          title: e.target.querySelector(\"#exampleForm\\\\.ControlInput1\")\r\n            .placeholder,\r\n          reflections: parseInt(\r\n            e.target.querySelector(\"#exampleForm\\\\.ControlSelect1\").value\r\n          ),\r\n        },\r\n        () => this.postData(this.state)\r\n      );\r\n    }\r\n  };\r\n\r\n  handleRainbowButton = () => {\r\n    this.setState({\r\n      ...this.state,\r\n      rainbow: !this.state.rainbow,\r\n    });\r\n  };\r\n\r\n  handleClearCanvas = () => {\r\n    this.setState({\r\n      ...this.state,\r\n      clearCanvas: !this.state.clearCanvas,\r\n    });\r\n  };\r\n\r\n  handleVariableLW = () => {\r\n    this.setState(\r\n      {\r\n        ...this.state,\r\n        variableLineWidth: !this.state.variableLineWidth,\r\n      },\r\n      () => console.log(this.state.variableLineWidth)\r\n    );\r\n  };\r\n\r\n  renderOptions = (num) => {\r\n    const N = num;\r\n    const arr = Array.from({ length: N }, (_, index) => index + 1);\r\n\r\n    return arr.map((val, i) => {\r\n      return (\r\n        <option value={val} key={i}>\r\n          {val}\r\n        </option>\r\n      );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    document.body.style.overflow = \"visible\";\r\n    return (\r\n      <div className=\"justify-content-center\">\r\n        <Sketch state={this.state} />\r\n        <SliderPicker\r\n          color={this.props.sketch.currentColor}\r\n          onChangeComplete={this.handleColorChangeComplete}\r\n          onChange={this.handleColorChange}\r\n        />\r\n        <br></br>\r\n        <Form.Label className={\"lineWidth\"}>Line Width</Form.Label>\r\n        <Slider\r\n          className=\"linewidth\"\r\n          label={\"Line Width\"}\r\n          min={1}\r\n          max={25}\r\n          step={1}\r\n          onChange={(value) => this.props.updateLineWidth(value)}\r\n          value={this.props.sketch.lineWidth}\r\n        />\r\n\r\n        <br></br>\r\n        {this.props.sketch.colors.length > 0 ? (\r\n          <GithubPicker\r\n            onChangeComplete={this.handleColorChange}\r\n            width={window.innerWidth * 0.25}\r\n            triangle={\"hide\"}\r\n            colors={this.props.sketch.colors.map((color) => color.hex)}\r\n          />\r\n        ) : null}\r\n        <br></br>\r\n        <button onClick={this.handleRainbowButton} className=\"rainbow-button\">\r\n          Rainbow\r\n        </button>\r\n        <br></br>\r\n        <br></br>\r\n        <Button onClick={this.handleVariableLW}>Variable Width</Button>\r\n        <br></br>\r\n        <br></br>\r\n\r\n        <Form className=\"newform\" onSubmit={this.handleSubmit}>\r\n          <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n            <Form.Label>Reflection Number</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              value={this.props.sketch.reflections}\r\n              name=\"reflections\"\r\n              onChange={this.handleReflectionChange}\r\n            >\r\n              {this.renderOptions(12)}\r\n            </Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n            <Form.Label>Title: </Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              value={this.state.title}\r\n              placeholder={this.state.placeHolder}\r\n              name=\"title\"\r\n              onChange={this.handleOnChange}\r\n            />\r\n          </Form.Group>\r\n          <Button\r\n            href=\"#\"\r\n            onFocus={this.handleClearCanvas}\r\n            onClick={this.handleClearCanvas}\r\n          >\r\n            Clear Canvas\r\n          </Button>\r\n          {\"\"}\r\n          <br></br>\r\n          <br></br>\r\n          <Button as=\"input\" type=\"submit\" value=\"Save Your Creation\" />\r\n          {\"\"}\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ sketches }) => {\r\n  return { sketch: sketches.sketch };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  createSketch,\r\n  updateColor,\r\n  updateReflections,\r\n  refreshStartColor,\r\n  refreshStartBgColor,\r\n  updateLineWidth,\r\n  addSketchColor,\r\n  resetSketch,\r\n})(CreateSketch);\r\n","export const getSketches = () => {\r\n  return (dispatch) => {\r\n    fetch(\"https://mandala-maker.herokuapp.com/sketches\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((resp) => resp.json())\r\n      .then((sketches) =>\r\n        dispatch({ type: \"FETCH_SKETCHES_SUCCESS\", payload: sketches })\r\n      );\r\n  };\r\n};\r\n\r\nexport const getSketch = (id) => {\r\n  return (dispatch) => {\r\n    return fetch(`https://mandala-maker.herokuapp.com/sketches/${id}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }).then((resp) => resp.json());\r\n    // .then(sketch => dispatch({type: \"FETCH_SKETCH_SUCCESS\", payload: sketch}))\r\n  };\r\n};\r\n\r\nexport const createSketch = (formData) => {\r\n  return (dispatch) => {\r\n    return fetch(\"https://mandala-maker.herokuapp.com/sketches\", {\r\n      method: \"POST\",\r\n      body: formData,\r\n    })\r\n      .then((resp) => resp.json())\r\n      .then((sketch) => {\r\n        return dispatch({ type: \"CREATE_SKETCH_SUCCESS\", payload: sketch });\r\n      });\r\n  };\r\n};\r\n\r\nexport const updateReflections = (reflections) => {\r\n  return { type: \"UPDATE_REFLECTIONS\", payload: reflections };\r\n};\r\n\r\nexport const updateColor = (color) => {\r\n  return { type: \"UPDATE_SKETCH_COLOR\", payload: color };\r\n};\r\n\r\nexport const refreshStartColor = () => {\r\n  return { type: \"REFRESH_START_COLOR\" };\r\n};\r\n\r\nexport const refreshStartBgColor = () => {\r\n  return { type: \"REFRESH_START_BG_COLOR\" };\r\n};\r\n\r\nexport const updateLineWidth = (lineWidth) => {\r\n  return { type: \"UPDATE_LINE_WIDTH\", payload: lineWidth };\r\n};\r\n\r\nexport const addSketchColor = (color) => {\r\n  return { type: \"ADD_SKETCH_COLOR\", payload: color };\r\n};\r\n\r\nexport const resetSketch = () => {\r\n  return { type: \"RESET_SKETCH\" };\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getSketch } from '../redux/actions/sketchActions';\r\n \r\nclass SketchShow extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    state = {\r\n        sketch: this.props.sketch\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        if (this.state.sketch === undefined) {\r\n            this.props.getSketch(this.props.match.params.id)\r\n            .then(foundSketch => {\r\n                if (foundSketch) {\r\n                this.setState({\r\n                    sketch: foundSketch\r\n                })\r\n            }\r\n            })\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        if (this.state.sketch) {\r\n            return (\r\n                <div className=\"image-large\">\r\n                    <h1>{this.state.sketch.title}</h1>\r\n                    <img src={this.state.sketch.image_full} alt={this.state.sketch.title} className=\"photo-medium\" />\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <h1>Sketch not found</h1>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n \r\n}\r\n \r\nconst mapStateToProps = ({sketches}, props) => {\r\n    return ({sketch: sketches.all.find(sketch => sketch.id == props.match.params.id)})\r\n}\r\n \r\nexport default connect(mapStateToProps, { getSketch })(SketchShow)","import React from 'react';\r\nimport { Link }  from 'react-router-dom'\r\nimport { Nav, Navbar, Form, FormControl, Button } from 'react-bootstrap'; \r\n\r\n\r\nconst MyNav = () => {\r\n    return (\r\n        <div>\r\n            {/* remove bg primary to set custom bg */}\r\n    <Navbar className=\"navbar-custom\" bg=\"primary\" variant=\"dark\"> \r\n        <Nav className=\"mr-auto\">\r\n            <Nav.Link as={Link} to=\"/sketches/new\" >Create</Nav.Link>\r\n            <Nav.Link as={Link} to=\"/sketches\" >Gallery</Nav.Link>\r\n            <Nav.Link as={Link} to=\"/\" >Sandbox</Nav.Link>\r\n        </Nav>\r\n  </Navbar>\r\n  </div>\r\n    )\r\n}\r\n\r\nexport default MyNav","import React from \"react\";\nimport \"./App.css\";\nimport SandboxSketch from \"./components/SandboxSketch\";\nimport Sketches from \"./components/Sketches\";\nimport CreateSketch from \"./components/CreateSketch\";\nimport SketchShow from \"./components/SketchShow\";\nimport MyNav from \"./components/MyNav\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getSketches } from \"./redux/actions/sketchActions\";\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.getSketches();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          <MyNav />\n          <Switch>\n            <Route path=\"/sketches/new\">\n              {routerProps => <CreateSketch {...routerProps} />}\n            </Route>\n            <Route path=\"/sketches/:id\">\n              {routerProps => <SketchShow {...routerProps} />}\n            </Route>\n            <Route path=\"/sketches\">\n              <Sketches />\n            </Route>\n            <Route path=\"/\">\n              {props => (\n                <SandboxSketch\n                  {...props}\n                  angle={0}\n                  rotateRate={0.5}\n                  className=\"sandbox\"\n                />\n              )}\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default connect(null, { getSketches })(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const sketchReducer = (state = { \r\n    all: [],\r\n    sketch: {\r\n        title: \"\",\r\n        colors: [],\r\n        currentColor: {h: Math.random()*360+1, s: Math.random(), l: Math.random()},\r\n        reflections: parseInt(Math.random()*(12-4)+4),\r\n        bgColor: {h: Math.random()*360+1, s: Math.random(), l: Math.random()},\r\n        lineWidth: 8\r\n    }\r\n }, action) => {\r\n    switch(action.type) {\r\n        case \"FETCH_SKETCHES_SUCCESS\":\r\n            return {...state, all: action.payload};\r\n        case \"CREATE_SKETCH_SUCCESS\":\r\n            return {...state, all: [...state.all, action.payload] };\r\n        case \"UPDATE_REFLECTIONS\":\r\n            return {...state,\r\n                    sketch: {\r\n                        ...state.sketch,\r\n                        reflections: action.payload\r\n                    }\r\n                }\r\n        case \"UPDATE_SKETCH_COLOR\":\r\n            return {...state,\r\n                sketch: {\r\n                    ...state.sketch,\r\n                    currentColor: action.payload\r\n                }\r\n            }\r\n\r\n        case \"REFRESH_START_COLOR\":\r\n            return {...state,\r\n                sketch: {\r\n                    ...state.sketch,\r\n                    currentColor: {h: Math.random()*360+1, s: Math.random(), l: Math.random()}\r\n                }\r\n            }\r\n\r\n        case \"REFRESH_START_BG_COLOR\":\r\n            return {...state,\r\n                sketch: {\r\n                    ...state.sketch,\r\n                    bgColor: {h: Math.random()*360+1, s: Math.random(), l: Math.random()}\r\n                }\r\n            }\r\n\r\n        case \"UPDATE_LINE_WIDTH\":\r\n            return {...state,\r\n                sketch: {\r\n                    ...state.sketch,\r\n                    lineWidth: action.payload\r\n                }\r\n            }\r\n\r\n        case \"ADD_SKETCH_COLOR\":\r\n            return {...state,\r\n                sketch: {\r\n                    ...state.sketch,\r\n                    colors: state.sketch.colors.concat(action.payload)\r\n                }\r\n            }\r\n        \r\n        case \"RESET_SKETCH\":\r\n            return {...state,\r\n                sketch: {\r\n                    title: \"\",\r\n                    colors: [],\r\n                    currentColor: {h: Math.random()*360+1, s: Math.random(), l: Math.random()},\r\n                    reflections: parseInt(Math.random()*(12-4)+4),\r\n                    bgColor: {h: Math.random()*360+1, s: Math.random(), l: Math.random()},\r\n                    lineWidth: 8\r\n                }\r\n            } \r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default sketchReducer","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport sketchReducer from './reducers/sketchReducer';\r\nimport thunk from 'redux-thunk'\r\n\r\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n  const rootReducer = combineReducers({\r\n      sketches: sketchReducer\r\n  });\r\n\r\n  const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(thunk))\r\n  ); \r\n\r\n  export default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}