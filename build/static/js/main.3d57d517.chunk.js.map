{"version":3,"sources":["components/SandboxSketch.js","components/SketchListItem.js","components/Sketches.js","components/Sketch.js","components/CreateSketch.js","redux/actions/sketchActions.js","components/SketchShow.js","components/MyNav.js","App.js","reportWebVitals.js","redux/reducers/sketchReducer.js","redux/store.js","index.js"],"names":["symmetry","Math","floor","random","xoff","bgAlpha","bg","setup","p5","canvasParentRef","noCursor","createCanvas","windowWidth","windowHeight","parent","angleMode","DEGREES","colorMode","HSL","background","withinCanvas","mouseX","width","mouseY","height","draw","translate","mx","my","pmx","pmouseX","pmy","pmouseY","hu","map","sin","sat","light","stroke","i","angle","rotate","d","dist","sw","strokeWeight","line","push","scale","pop","frameCount","windowResized","resizeCanvas","SketchListItem","sketch","id","className","to","Col","src","image_thumbnail","alt","title","Sketches","state","value","filtered","this","props","sketches","sort","a","b","filter","toLowerCase","includes","Form","FormControl","type","onChange","event","setState","target","placeholder","Container","Row","React","Component","connect","all","reflections","color","currentColor","bgColor","clearCanvas","drawRainbow","mouseIsPressed","rainbow","variableLineWidth","lineWidth","CreateSketch","placeHolder","wordChoices","Faker","Hipster","words","join","Space","planet","star","constellation","starCluster","parseInt","length","handleOnChange","e","key","name","handleReflectionChange","updateReflections","handleColorChange","hsl","updateColor","handleColorChangeComplete","addSketchColor","postData","formData","document","querySelector","toBlob","form","FormData","append","Object","keys","forEach","createSketch","then","history","handleSubmit","preventDefault","handleRainbowButton","handleClearCanvas","handleVariableLW","console","log","renderOptions","num","N","Array","from","_","index","val","resetSketch","Sketch","onChangeComplete","Label","label","min","max","step","updateLineWidth","colors","window","innerWidth","triangle","hex","onClick","Button","onSubmit","Group","controlId","Control","as","href","onFocus","dispatch","fetch","method","body","resp","json","payload","refreshStartColor","refreshStartBgColor","SketchShow","undefined","getSketch","match","params","foundSketch","image_full","find","headers","MyNav","Navbar","variant","Nav","Link","App","getSketches","exact","path","render","SandboxSketch","rotateRate","component","routerProps","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","sketchReducer","h","s","l","action","concat","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3d57d517.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Sketch from \"react-p5\";\r\n\r\n\r\n\r\nexport default () => {\r\n  let symmetry = Math.floor(Math.random() * (12 - 2) + 2);\r\n  let xoff = 0;\r\n  let bgAlpha = 0;\r\n  let bg = [Math.random()*360+1, Math.random(), Math.random()]\r\n  \r\n\r\n  const setup = (p5, canvasParentRef) => {\r\n    // use parent to render the canvas in this ref\r\n    // (without that p5 will render the canvas outside of your component)\r\n    p5.noCursor()\r\n    p5.createCanvas(p5.windowWidth, p5.windowHeight * 0.915).parent(canvasParentRef);\r\n    p5.angleMode(p5.DEGREES);\r\n    p5.colorMode(p5.HSL, 360, 1, 1, 1);\r\n    p5.background(0)\r\n\r\n    //declare p5 dependent functions here:\r\n    p5.withinCanvas = () => {\r\n      return (p5.mouseX > 0 && p5.mouseX < p5.width && p5.mouseY > 0 && p5.mouseY < p5.height) ? true : false\r\n    }\r\n  };\r\n  \r\n  const draw = (p5) => {\r\n    if (bgAlpha < 0.2) {\r\n    p5.background(0, 0, 0, bgAlpha*-1)\r\n  }\r\n    p5.background(...bg, bgAlpha);\r\n  \r\n    p5.translate(p5.width * 0.5, p5.height * 0.5);\r\n\r\n    if ( p5.withinCanvas() ) {\r\n\r\n        let mx = p5.mouseX - p5.width / 2;\r\n        let my = p5.mouseY - p5.height / 2;\r\n        let pmx = p5.pmouseX - p5.width / 2;\r\n        let pmy = p5.pmouseY - p5.height / 2;\r\n\r\n        let hu = p5.map(p5.sin(xoff), -1,1,0,360);\r\n        let sat = p5.map(p5.sin(xoff), -1,1,0.6,1);\r\n        let light = p5.map(p5.sin(xoff), -1,1,0.3,1);\r\n        xoff += 1;\r\n        \r\n        p5.stroke(hu, sat, light, 1);\r\n\r\n        for (let i = 0; i < symmetry; i++) {\r\n          let angle = 360 / symmetry;\r\n          p5.rotate(angle);\r\n          let d = p5.dist(mx, my, pmx, pmy)\r\n          // let sw = 8\r\n          let sw = p5.map(d, 0, 20, 20, 3) /* variable strokeweight */\r\n          p5.strokeWeight(sw)\r\n          p5.line(mx, my, pmx, pmy);\r\n          p5.push();\r\n          p5.scale(1, -1);\r\n          p5.line(mx, my, pmx, pmy);\r\n          p5.pop();\r\n        }\r\n\r\n    }\r\n    bgAlpha+= 0.00005;\r\n    if (p5.frameCount % 30 == 0) {\r\n      // console.log(bgAlpha)\r\n    }\r\n\r\n    if (bgAlpha > 0.02) {\r\n      bgAlpha += 0.02;\r\n    }\r\n    if (bgAlpha > 1) {\r\n      bgAlpha = 0;\r\n    }\r\n  };\r\n\r\n  const windowResized = (p5) => {\r\n    p5.resizeCanvas(p5.windowWidth, p5.windowHeight * 0.915);\r\n    p5.background(0)\r\n    p5.background(...bg, bgAlpha);\r\n  };\r\n\r\n\r\n  return <Sketch setup={setup} draw={draw} windowResized={windowResized} />;\r\n};","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Col } from 'react-bootstrap'\r\n\r\nexport default function SketchListItem ({sketch}) {\r\n\r\n    return (\r\n        <div id={sketch.id} className=\"grid-item\">\r\n            <Link to={`sketches/${sketch.id}`}>\r\n                <Col >\r\n                <img src={sketch.image_thumbnail} alt={sketch.title} className=\"thumbnail\"/>\r\n                </Col>\r\n            </Link>\r\n            <p>{sketch.title}</p>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport SketchListItem from './SketchListItem.js';\r\nimport { Form, FormControl, Row, Container } from 'react-bootstrap'; \r\n\r\nclass Sketches extends React.Component {\r\n\r\n    state = {\r\n        value: \"\"\r\n    }\r\n\r\n    render () {\r\n\r\n        const sorted = this.props.sketches.sort((a, b) => b.id - a.id)\r\n\r\n        let filtered = sorted.filter(sketch => {\r\n            return sketch.title.toLowerCase().includes(this.state.value.toLowerCase())\r\n        })\r\n\r\n        return (\r\n        <div>\r\n            <br></br>\r\n            <Form className=\"searchbar\">\r\n                <FormControl type=\"text\" value={this.state.value} onChange={event => this.setState({ value: event.target.value})} placeholder=\"Filter by title\" className=\"mr-sm-2\" />\r\n            <br></br>\r\n            </Form>\r\n            <Container >\r\n            <Row >\r\n                {filtered.map(sketch => <SketchListItem sketch={sketch} />)}\r\n            </Row>\r\n            </Container>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({sketches}) => {\r\n    return ({sketches: sketches.all})\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(Sketches)\r\n\r\n","import React from \"react\";\r\nimport Sketch from \"react-p5\";\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst sketch = (props) => {\r\n\r\n  let symmetry = props.sketch.reflections;\r\n  let xoff = 0;\r\n  let color = [props.sketch.currentColor[\"h\"], props.sketch.currentColor[\"s\"], props.sketch.currentColor[\"l\"]]\r\n  let bgColor = [props.sketch.bgColor[\"h\"], props.sketch.bgColor[\"s\"], props.sketch.bgColor[\"l\"]]\r\n\r\n  const setup = (p5, canvasParentRef) => {\r\n    // use parent to render the canvas in this ref\r\n    // (without that p5 will render the canvas outside of your component)\r\n    p5.createCanvas(p5.windowWidth*0.995, p5.windowHeight * 0.8).parent(canvasParentRef);\r\n    p5.angleMode(p5.DEGREES);\r\n    p5.colorMode(p5.HSL, 360, 1, 1, 100);\r\n    p5.background(...bgColor, 100);\r\n\r\n    //declare p5 dependent functions here:\r\n    p5.withinCanvas = () => {\r\n      return (p5.mouseX > 0 && p5.mouseX < p5.width && p5.mouseY > 0 && p5.mouseY < p5.height) ? true : false\r\n    }\r\n\r\n    p5.clearCanvas = () => {\r\n      p5.background(...bgColor, 100);\r\n    }\r\n    \r\n\r\n    p5.drawRainbow = () => {\r\n        xoff += 1;\r\n        let hu = p5.map(p5.sin(xoff), -1,1,0,360);\r\n        let sat = p5.map(p5.sin(xoff), -1,1,0.6,1);\r\n        let light = p5.map(p5.sin(xoff), -1,1,0.3,1);\r\n        return [hu, sat, light, 100]\r\n      }\r\n\r\n  };\r\n  \r\n  const draw = (p5) => {\r\n    p5.translate(p5.width * 0.5, p5.height * 0.5);\r\n    if (props.state.clearCanvas) {\r\n      p5.clearCanvas()\r\n    }\r\n\r\n    if ( p5.mouseIsPressed && p5.withinCanvas() ) {\r\n        let mx = p5.mouseX - p5.width / 2;\r\n        let my = p5.mouseY - p5.height / 2;\r\n        let pmx = p5.pmouseX - p5.width / 2;\r\n        let pmy = p5.pmouseY - p5.height / 2;\r\n\r\n        props.state.rainbow ? p5.stroke(p5.drawRainbow()) : p5.stroke(...color, 100);\r\n\r\n        for (let i = 0; i < symmetry; i++) {\r\n          \r\n          let angle = 360 / symmetry;\r\n          p5.rotate(angle);\r\n          let d = p5.dist(mx, my, pmx, pmy)\r\n          props.state.variableLineWidth ? p5.strokeWeight(p5.map(d, 0, 20, 20, 3)) : p5.strokeWeight(props.sketch.lineWidth)\r\n          \r\n          p5.line(mx, my, pmx, pmy);\r\n          p5.push();\r\n          p5.scale(1, -1);\r\n          p5.line(mx, my, pmx, pmy);\r\n          p5.pop();\r\n        }\r\n\r\n    }\r\n\r\n  };\r\n\r\n  const windowResized = (p5) => {\r\n    p5.resizeCanvas(p5.windowWidth*0.995, p5.windowHeight * 0.8);\r\n    p5.background(...bgColor, 100);\r\n  };\r\n\r\n\r\n  return <Sketch setup={setup} draw={draw} windowResized={windowResized}  />;\r\n};\r\n\r\n\r\nconst mapStateToProps = ({sketches}) => {\r\n  return ({sketch: sketches.sketch})\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(sketch)\r\n\r\n","import React from 'react';\r\nimport Sketch from './Sketch';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport Faker from 'fakergem';\r\nimport { connect } from 'react-redux';\r\nimport { createSketch,\r\n    updateColor,\r\n    updateReflections,\r\n    refreshStartColor,\r\n    refreshStartBgColor,\r\n    updateLineWidth,\r\n    addSketchColor,\r\n    resetSketch\r\n } from '../redux/actions/sketchActions';\r\n\r\nimport { SliderPicker, GithubPicker } from 'react-color';\r\nimport Slider from 'react-rangeslider';\r\nimport 'react-rangeslider/lib/index.css'; \r\n\r\n\r\n\r\nclass  CreateSketch extends React.Component {\r\n\r\n    state = {\r\n        title: \"\",\r\n        rainbow: false,\r\n        placeHolder: \"\",\r\n        variableLineWidth: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Might still use to create sketch from existing palette:\r\n        // this.props.refreshStartColor()\r\n        // this.props.refreshStartBgColor()\r\n        \r\n        this.props.resetSketch()\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            placeHolder: this.placeHolder(),\r\n        })\r\n    }\r\n\r\n    placeHolder = () => {\r\n        let wordChoices = [Faker.Hipster.words(1).join(\" \")+\" \"+Faker.Space.planet().toLowerCase(), \r\n            Faker.Hipster.words(1).join(\" \")+\" \"+Faker.Space.star().toLowerCase(), \r\n            Faker.Hipster.words(1).join(\" \")+\" \"+Faker.Space.constellation().toLowerCase(),\r\n            Faker.Hipster.words(1).join(\" \")+\" \"+Faker.Space.starCluster().toLowerCase()]\r\n        return wordChoices[parseInt(Math.random()*wordChoices.length)]\r\n    }\r\n\r\n\r\n    handleOnChange = (e) => {\r\n        const key = e.target.name;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            [key]: e.target.value\r\n        })\r\n    }\r\n    \r\n    handleReflectionChange = (e) => {\r\n        this.props.updateReflections(+e.target.value)\r\n    }\r\n\r\n    handleColorChange = ({hsl}) => {\r\n        this.props.updateColor(hsl)\r\n    }\r\n\r\n    handleColorChangeComplete = (color) => {\r\n        this.props.addSketchColor(color)\r\n    }\r\n\r\n\r\n\r\n    postData = (formData) => {\r\n        let canvas = document.querySelector(\"#defaultCanvas0\");\r\n        canvas.toBlob(b => {\r\n          let form = new FormData();\r\n          form.append(\"image\", b);\r\n          Object.keys(formData).forEach(key => {\r\n              form.append(key, formData[key])\r\n          })\r\n          this.props.createSketch(form)\r\n          .then(() => this.props.history.push(\"/sketches\"))\r\n        })\r\n        \r\n      }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // conditional title to state (placeholder vs value)\r\n        if (e.target.querySelector(\"#exampleForm\\\\.ControlInput1\").value !== \"\") {\r\n            this.setState({\r\n                ...this.state,\r\n                title: e.target.querySelector(\"#exampleForm\\\\.ControlInput1\").value,\r\n                reflections: parseInt(e.target.querySelector(\"#exampleForm\\\\.ControlSelect1\").value)\r\n            }, () => this.postData(this.state)) \r\n\r\n        } else {\r\n            this.setState({\r\n                ...this.state,\r\n                title: e.target.querySelector(\"#exampleForm\\\\.ControlInput1\").placeholder,\r\n                reflections: parseInt(e.target.querySelector(\"#exampleForm\\\\.ControlSelect1\").value)\r\n            }, () => this.postData(this.state))\r\n        }\r\n    }\r\n\r\n    handleRainbowButton = () => {\r\n        this.setState({\r\n            ...this.state,\r\n            rainbow: !this.state.rainbow\r\n        })\r\n    }\r\n\r\n    handleClearCanvas = () => {\r\n        this.setState({\r\n            ...this.state, \r\n            clearCanvas: !this.state.clearCanvas\r\n        })\r\n    }\r\n\r\n    handleVariableLW = () => {\r\n        this.setState({\r\n            ...this.state, \r\n            variableLineWidth: !this.state.variableLineWidth\r\n        }, () => console.log(this.state.variableLineWidth))\r\n\r\n    }\r\n\r\n\r\n    renderOptions = (num) => {\r\n        const N = num;\r\n        const arr = Array.from({length: N}, (_, index) => index + 1)\r\n\r\n        return arr.map((val, i) => {\r\n            return <option value={val} key={i}>{val}</option>\r\n        })\r\n    }\r\n\r\n    render () { \r\n        return (\r\n\r\n        <div className=\"justify-content-center\">\r\n            \r\n            <Sketch state={this.state} />\r\n            <SliderPicker color={this.props.sketch.currentColor} onChangeComplete={ this.handleColorChangeComplete } onChange={this.handleColorChange}/>\r\n            <br></br>\r\n            <Form.Label className={\"lineWidth\"}>Line Width</Form.Label>\r\n                <Slider className=\"linewidth\"\r\n                label={\"Line Width\"}\r\n                min={1}\r\n                max={25}\r\n                step={1}\r\n                onChange={value => this.props.updateLineWidth(value)}\r\n                value={this.props.sketch.lineWidth}/>\r\n            \r\n            <br></br>\r\n            {this.props.sketch.colors.length > 0 ? <GithubPicker \r\n                onChangeComplete={this.handleColorChange}\r\n                width={window.innerWidth * 0.25} \r\n                triangle={\"hide\"} \r\n                colors={this.props.sketch.colors.map(color => color.hex)}\r\n            /> : null }\r\n            <br></br>\r\n            <button onClick={this.handleRainbowButton} className=\"rainbow-button\">Rainbow</button>\r\n            <br></br><br></br>\r\n            <Button onClick={this.handleVariableLW} >Variable Width</Button>\r\n            <br></br>\r\n            <br></br>\r\n\r\n            <Form className=\"newform\" onSubmit={this.handleSubmit}>\r\n            <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                <Form.Label>Reflection Number</Form.Label>\r\n                <Form.Control as=\"select\" value={this.props.sketch.reflections} name=\"reflections\" onChange={this.handleReflectionChange}>\r\n                    {this.renderOptions(12)}\r\n                </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                <Form.Label>Title: </Form.Label>\r\n                <Form.Control type=\"text\" value={this.state.title} placeholder={this.state.placeHolder} name=\"title\" onChange={this.handleOnChange}/>\r\n            </Form.Group>\r\n                <Button href=\"#\" onFocus={this.handleClearCanvas} onClick={this.handleClearCanvas} >Clear Canvas</Button>{''}\r\n                <br></br><br></br>\r\n                <Button as=\"input\" type=\"submit\" value=\"Save Your Creation\" />{''}\r\n            </Form>\r\n            \r\n\r\n        </div>\r\n    )\r\n        }\r\n}\r\n\r\nconst mapStateToProps = ({sketches}) => {\r\n    return ({sketch: sketches.sketch})\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, { \r\n    createSketch,\r\n    updateColor,\r\n    updateReflections,\r\n    refreshStartColor,\r\n    refreshStartBgColor,\r\n    updateLineWidth,\r\n    addSketchColor,\r\n    resetSketch\r\n })(CreateSketch)","export const getSketches = () => {\r\n   return dispatch => {\r\n       fetch('https://mandala-maker.herokuapp.com/sketches', {\r\n           method: 'GET',\r\n           headers: {\r\n            'Content-Type': 'application/json'\r\n           }\r\n       })\r\n       .then(resp => resp.json())\r\n       .then(sketches => dispatch({type: \"FETCH_SKETCHES_SUCCESS\", payload: sketches}))\r\n   } \r\n}\r\n\r\nexport const getSketch = (id) => {\r\n    return dispatch => {\r\n        return fetch(`https://mandala-maker.herokuapp.com/sketches/${id}`, {\r\n            method: 'GET',\r\n            headers: {\r\n             'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(resp => resp.json())\r\n        // .then(sketch => dispatch({type: \"FETCH_SKETCH_SUCCESS\", payload: sketch}))\r\n    } \r\n }\r\n\r\nexport const createSketch = (formData) => {\r\n    return dispatch => {\r\n        return fetch('https://mandala-maker.herokuapp.com/sketches', {\r\n            method: 'POST', \r\n            body: formData\r\n        })\r\n        .then(resp => resp.json())\r\n        .then(sketch => {\r\n            return dispatch({type: \"CREATE_SKETCH_SUCCESS\", payload: sketch})\r\n        }) \r\n    } \r\n}\r\n\r\nexport const updateReflections = (reflections) => {\r\n    return {type: \"UPDATE_REFLECTIONS\", payload: reflections}\r\n}\r\n\r\nexport const updateColor = (color) => {\r\n    return {type: \"UPDATE_SKETCH_COLOR\", payload: color}\r\n}\r\n\r\nexport const refreshStartColor = () => {\r\n    return {type: \"REFRESH_START_COLOR\"}\r\n}\r\n\r\nexport const refreshStartBgColor = () => {\r\n    return {type: \"REFRESH_START_BG_COLOR\"}\r\n}\r\n\r\nexport const updateLineWidth = (lineWidth) => {\r\n    return {type: \"UPDATE_LINE_WIDTH\", payload: lineWidth}\r\n}\r\n\r\nexport const addSketchColor = (color) => {\r\n    return {type: \"ADD_SKETCH_COLOR\", payload: color}\r\n}\r\n\r\nexport const resetSketch = () => {\r\n    return {type: \"RESET_SKETCH\"}\r\n}\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getSketch } from '../redux/actions/sketchActions';\r\n \r\nclass SketchShow extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    state = {\r\n        sketch: this.props.sketch\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        if (this.state.sketch === undefined) {\r\n            this.props.getSketch(this.props.match.params.id)\r\n            .then(foundSketch => {\r\n                if (foundSketch) {\r\n                this.setState({\r\n                    sketch: foundSketch\r\n                })\r\n            }\r\n            })\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        if (this.state.sketch) {\r\n            return (\r\n                <div>\r\n                    <h1>{this.state.sketch.title}</h1>\r\n                    <img src={this.state.sketch.image_full} alt={this.state.sketch.title} className=\"photo-medium\" />\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <h1>Sketch not found</h1>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n \r\n}\r\n \r\nconst mapStateToProps = ({sketches}, props) => {\r\n    return ({sketch: sketches.all.find(sketch => sketch.id == props.match.params.id)})\r\n}\r\n \r\nexport default connect(mapStateToProps, { getSketch })(SketchShow)","import React from 'react';\r\nimport { Link }  from 'react-router-dom'\r\nimport { Nav, Navbar, Form, FormControl, Button } from 'react-bootstrap'; \r\n\r\n\r\nconst MyNav = () => {\r\n    return (\r\n        <div>\r\n            {/* remove bg primary to set custom bg */}\r\n    <Navbar className=\"navbar-custom\" bg=\"primary\" variant=\"dark\"> \r\n        <Nav className=\"mr-auto\">\r\n            <Nav.Link as={Link} to=\"/sketches/new\" >Create</Nav.Link>\r\n            <Nav.Link as={Link} to=\"/sketches\" >Gallery</Nav.Link>\r\n            <Nav.Link as={Link} to=\"/\" >Sandbox</Nav.Link>\r\n        </Nav>\r\n  </Navbar>\r\n  </div>\r\n    )\r\n}\r\n\r\nexport default MyNav","import React from 'react';\nimport './App.css';\nimport SandboxSketch from './components/SandboxSketch'\nimport Sketches from './components/Sketches'\nimport CreateSketch from './components/CreateSketch'\nimport SketchShow from './components/SketchShow'\nimport MyNav from './components/MyNav'\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { getSketches } from './redux/actions/sketchActions';\n// import Button from 'react-bootstrap/Button';\n\n\n\nclass App extends React.Component {\n\n  componentDidMount() {\n    this.props.getSketches()\n  }\n\n  render () {\n    return (\n    <div className=\"App\">\n      <Router >\n      <MyNav />\n        <Switch>\n          <Route exact path=\"/\"\n          render={(props) => (\n            <SandboxSketch {...props} angle={0} rotateRate={0.5} />\n          )} \n            />\n          <Route exact path=\"/sketches\" component={Sketches}/>\n          <Route exact path=\"/sketches/new\" component={CreateSketch}/>\n          <Route exact path=\"/sketches/:id\" render={(routerProps) => <SketchShow {...routerProps}/>}/>\n\n        </Switch>\n      </Router>\n    </div>\n    )\n  }\n}\n\nexport default connect(null, { getSketches })(App)\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const sketchReducer = (state = { \r\n    all: [],\r\n    sketch: {\r\n        title: \"\",\r\n        colors: [],\r\n        currentColor: {h: Math.random()*360+1, s: Math.random(), l: Math.random()},\r\n        reflections: 4,\r\n        bgColor: {h: Math.random()*360+1, s: Math.random(), l: Math.random()},\r\n        lineWidth: 8\r\n    }\r\n }, action) => {\r\n    switch(action.type) {\r\n        case \"FETCH_SKETCHES_SUCCESS\":\r\n            return {...state, all: action.payload};\r\n        case \"CREATE_SKETCH_SUCCESS\":\r\n            return {...state, all: [...state.all, action.payload] };\r\n        case \"UPDATE_REFLECTIONS\":\r\n            return {...state,\r\n                    sketch: {\r\n                        ...state.sketch,\r\n                        reflections: action.payload\r\n                    }\r\n                }\r\n        case \"UPDATE_SKETCH_COLOR\":\r\n            return {...state,\r\n                sketch: {\r\n                    ...state.sketch,\r\n                    currentColor: action.payload\r\n                }\r\n            }\r\n\r\n        case \"REFRESH_START_COLOR\":\r\n            return {...state,\r\n                sketch: {\r\n                    ...state.sketch,\r\n                    currentColor: {h: Math.random()*360+1, s: Math.random(), l: Math.random()}\r\n                }\r\n            }\r\n\r\n        case \"REFRESH_START_BG_COLOR\":\r\n            return {...state,\r\n                sketch: {\r\n                    ...state.sketch,\r\n                    bgColor: {h: Math.random()*360+1, s: Math.random(), l: Math.random()}\r\n                }\r\n            }\r\n\r\n        case \"UPDATE_LINE_WIDTH\":\r\n            return {...state,\r\n                sketch: {\r\n                    ...state.sketch,\r\n                    lineWidth: action.payload\r\n                }\r\n            }\r\n\r\n        case \"ADD_SKETCH_COLOR\":\r\n            return {...state,\r\n                sketch: {\r\n                    ...state.sketch,\r\n                    colors: state.sketch.colors.concat(action.payload)\r\n                }\r\n            }\r\n        \r\n        case \"RESET_SKETCH\":\r\n            return {...state,\r\n                sketch: {\r\n                    title: \"\",\r\n                    colors: [],\r\n                    currentColor: {h: Math.random()*360+1, s: Math.random(), l: Math.random()},\r\n                    reflections: 4,\r\n                    bgColor: {h: Math.random()*360+1, s: Math.random(), l: Math.random()},\r\n                    lineWidth: 8\r\n                }\r\n            } \r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default sketchReducer","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport sketchReducer from './reducers/sketchReducer';\r\nimport thunk from 'redux-thunk'\r\n\r\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n  const rootReducer = combineReducers({\r\n      sketches: sketchReducer\r\n  });\r\n\r\n  const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(thunk))\r\n  ); \r\n\r\n  export default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}